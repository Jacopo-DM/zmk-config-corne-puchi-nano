/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        BT_SETTINGS: BT_SETTINGS {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_SETTINGS";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&to 0>;
        };

        HW: HW {
            compatible = "zmk,behavior-hold-tap";
            label = "HW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        HWLT: HWLT {
            compatible = "zmk,behavior-hold-tap";
            label = "HWLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        HRNA: HRNA {
            compatible = "zmk,behavior-hold-tap";
            label = "HRNA";
            bindings = <&kp>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q      &kp W             &kp E        &kp R               &kp T             &kp Y            &kp U                &kp I                &kp O              &kp P  &kp BSPC
&none       &HWLT 2 A  &HW LEFT_SHIFT S  &HW LCTRL D  &HW LEFT_COMMAND F  &HW LEFT_ALT G    &HW RIGHT_ALT H  &HW RIGHT_COMMAND J  &HW RIGHT_CONTROL K  &HW RIGHT_SHIFT L  &mo 2  &none
&kp TAB     &kp Z      &kp X             &kp C        &kp V               &kp B             &kp N            &kp M                &none                &none              &none  &kp ESCAPE
                                         &HWLT 3 TAB  &HWLT 1 SPACE       &HWLT 4 ENTER     &HWLT 4 ENTER    &HWLT 1 SPACE        &HWLT 3 LS(TAB)
            >;
        };

        symbols {
            bindings = <
&kp ESC         &kp PIPE            &kp AMPERSAND                    &kp SINGLE_QUOTE         &kp HASH                 &kp GREATER_THAN      &kp LESS_THAN        &kp MINUS                     &kp PLUS                 &kp FSLH                           &kp ASTERISK         &kp BSPC
&kp LEFT_BRACE  &lt 3 LEFT_BRACKET  &HW LEFT_SHIFT LEFT_PARENTHESIS  &HW LCTRL DOUBLE_QUOTES  &HW LEFT_COMMAND PERIOD  &HW LEFT_ALT COMMA    &HW RIGHT_ALT COLON  &HW RIGHT_COMMAND UNDERSCORE  &HW RIGHT_CONTROL EQUAL  &HW RIGHT_SHIFT RIGHT_PARENTHESIS  &lt 3 RIGHT_BRACKET  &kp RIGHT_BRACE
&kp TAB         &kp DOLLAR          &kp TILDE                        &kp GRAVE                &kp EXCLAMATION          &kp QUESTION          &kp SEMI             &kp AT_SIGN                   &kp PERCENT              &kp BSLH                           &kp CARET            &kp ESCAPE
                                                                     &trans                   &trans                   &trans                &trans               &trans                        &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        control {
            bindings = <
&kp MINUS         &kp EQUAL  &kp LG(LC(A))       &kp LC(UP_ARROW)    &kp LG(LC(S))  &kp LG(LS(NUMBER_4))     &none     &none     &none   &none      &none  &kp BACKSPACE
&kp LG(LEFT_ALT)  &kp LCMD   &kp LC(LEFT_ARROW)  &kp LG(LC(C))       &kp LC(RIGHT)  &kp LG(LC(LA(SPACE)))    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&none             &none      &kp LG(LC(Z))       &kp LC(DOWN_ARROW)  &kp LG(LC(X))  &kp LG(LC(LA(N)))        &none     &none     &none   &none      &none  &kp ESC
                                                 &trans              &trans         &trans                   &trans    &trans    &trans
            >;
        };

        vscode {
            bindings = <
&kp ESC        &none      &kp LG(W)             &none      &none      &kp LG(T)    &kp LS(LG(N))  &kp LG(O)        &kp LS(LG(I))  &kp LG(FSLH)   &none        &kp BSPC
&none          &kp LG(A)  &HW LEFT_SHIFT LG(S)  &none      &kp LG(F)  &none        &kp LA(LEFT)   &kp LA(DOWN)     &kp LA(UP)     &kp LA(RIGHT)  &none        &none
&kp LS(LG(Z))  &kp LG(Z)  &kp LG(X)             &kp LG(C)  &kp LG(V)  &none        &kp LS(LG(P))  &kp LS(LG(RET))  &kp LA(RET)    &kp LC(GRAVE)  &kp LG(DOT)  &kp ESC
                                                &trans     &trans     &trans       &trans         &trans           &trans
            >;
        };

        bluethooth {
            bindings = <
&none  &none         &none         &none         &none         &none           &none       &none           &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none           &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &bt BT_CLR  &bt BT_CLR_ALL  &none  &none  &none  &to 0
                                   &none         &none         &none           &none       &none           &none
            >;
        };

        template {
            bindings = <
&kp ESC  &none    &none             &none        &none               &none             &none            &none                &none                &none              &none  &kp BSPC
&none    &lt 3 A  &HW LEFT_SHIFT S  &HW LCTRL D  &HW LEFT_COMMAND F  &HW LEFT_ALT G    &HW RIGHT_ALT H  &HW RIGHT_COMMAND J  &HW RIGHT_CONTROL K  &HW RIGHT_SHIFT L  &mo 3  &none
&kp TAB  &none    &none             &none        &none               &none             &none            &none                &none                &none              &none  &kp ESCAPE
                                    &trans       &trans              &trans            &trans           &trans               &trans
            >;
        };
    };
};

// -----------------------------------------------------------------------------------------
// &nice_view_spi {
//   cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
// };
