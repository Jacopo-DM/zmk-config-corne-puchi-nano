/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ESC_OR_LR0: ESC_OR_LR0 {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_OR_LR0";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&to 0>;

            tapping-term-ms = <300>;
        };

        GO_TO_BT: GO_TO_BT {
            compatible = "zmk,behavior-tap-dance";
            label = "GO_TO_BT";
            #binding-cells = <0>;
            bindings = <&none>, <&to 4>;
        };

        MO_OR_TO: MO_OR_TO {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_OR_TO";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R          &kp T        &kp Y    &kp U          &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F          &kp G        &kp H    &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V          &kp B        &kp N    &kp M          &kp COMMA  &kp DOT  &kp FSLH  &ESC_OR_LR0
                         &kp LGUI  &MO_OR_TO 1 3  &kp SPACE    &kp RET  &MO_OR_TO 2 1  &kp RALT
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&none      &none   &none   &none     &none   &none        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &none   &none
&kp LSHFT  &none   &none   &none     &none   &none        &none     &none     &none     &none      &none   &ESC_OR_LR0
                           &kp LGUI  &to 0   &kp SPACE    &kp RET   &to 2     &kp RALT
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp GRAVE  &none   &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp TILDE
&kp LSHFT  &none      &none   &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &ESC_OR_LR0
                              &kp LGUI  &to 1     &kp SPACE    &kp RET    &sl 3      &kp RALT
            >;
        };

        control {
            bindings = <
&kp MINUS        &kp EQUAL    &kp A               &kp LC(UP_ARROW)          &kp S          &kp LG(T)               &none  &none  &none  &none  &none  &GO_TO_BT
&kp LC(LS(TAB))  &kp LC(TAB)  &kp LC(LEFT_ARROW)  &kp C                     &kp LC(RIGHT)  &kp LG(W)               &none  &none  &none  &none  &none  &none
&kp SPACE        &kp ENTER    &kp Z               &kp LC(DOWN_ARROW)        &kp X          &none                   &none  &none  &none  &none  &none  &ESC_OR_LR0
                                                  &kp LC(LA(LEFT_COMMAND))  &to 2          &kp LC(LEFT_COMMAND)    &none  &to 0  &none
            >;
        };

        bluethooth {
            bindings = <
&none  &none         &none         &none         &none         &none           &none       &none           &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none           &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &bt BT_CLR  &bt BT_CLR_ALL  &none  &none  &none  &ESC_OR_LR0
                                   &none         &none         &none           &none       &none           &none
            >;
        };
    };
};

// -----------------------------------------------------------------------------------------
// &nice_view_spi {
//   cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
// };
