/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        BT_SETTINGS: BT_SETTINGS {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_SETTINGS";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&to 0>;
        };

        HOME_ROW: HOME_ROW {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        HOME_ROW_MO: HOME_ROW_MO {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MO";
            bindings = <&kp>, <&mo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q             &kp W                   &kp E              &kp R                     &kp T                   &kp Y                  &kp U                      &kp I                      &kp O                    &kp P  &kp BSPC
&none       &HOME_ROW_MO A 2  &HOME_ROW LEFT_SHIFT S  &HOME_ROW LCTRL D  &HOME_ROW LEFT_COMMAND F  &HOME_ROW LEFT_ALT G    &HOME_ROW RIGHT_ALT H  &HOME_ROW RIGHT_COMMAND J  &HOME_ROW RIGHT_CONTROL K  &HOME_ROW RIGHT_SHIFT L  &mo 2  &none
&kp TAB     &kp Z             &kp X                   &kp C              &kp V                     &kp B                   &kp N                  &kp M                      &none                      &none                    &none  &kp ESCAPE
                                                      &mo 3              &mo 1                     &kp SPACE               &kp RET                &mo 1                      &mo 2
            >;
        };

        symbols {
            bindings = <
&kp ESC         &kp PIPE            &kp AMPERSAND                          &kp SINGLE_QUOTE               &kp HASH                       &kp GREATER_THAN            &kp LESS_THAN              &kp MINUS                           &kp PLUS                       &kp FSLH                                 &kp ASTERISK         &kp BSPC
&kp LEFT_BRACE  &lt 2 LEFT_BRACKET  &HOME_ROW LEFT_SHIFT LEFT_PARENTHESIS  &HOME_ROW LCTRL DOUBLE_QUOTES  &HOME_ROW LEFT_COMMAND PERIOD  &HOME_ROW LEFT_ALT COMMA    &HOME_ROW RIGHT_ALT COLON  &HOME_ROW RIGHT_COMMAND UNDERSCORE  &HOME_ROW RIGHT_CONTROL EQUAL  &HOME_ROW RIGHT_SHIFT RIGHT_PARENTHESIS  &lt 2 RIGHT_BRACKET  &kp RIGHT_BRACE
&kp TAB         &none               &kp TILDE                              &kp GRAVE                      &kp EXCLAMATION                &kp QUESTION                &kp SEMICOLON              &kp AT_SIGN                         &kp PERCENT                    &kp BSLH                                 &none                &kp ESCAPE
                                                                           &trans                         &trans                         &kp SPACE                   &kp RET                    &trans                              &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        control {
            bindings = <
&kp MINUS                 &kp EQUAL             &kp A               &kp LC(UP_ARROW)    &kp S          &kp LG(LS(NUMBER_4))     &kp LS(LA(LEFT))  &kp LA(DOWN)     &kp LA(UP)   &kp LS(LA(RIGHT))  &kp LG(X)      &kp BACKSPACE
&kp LC(LA(LEFT_COMMAND))  &kp LC(LEFT_COMMAND)  &kp LC(LEFT_ARROW)  &kp C               &kp LC(RIGHT)  &kp LG(LC(LA(SPACE)))    &kp LS(LG(P))     &kp LS(LG(RET))  &kp LA(RET)  &kp LG(FSLH)       &kp LG(DOT)    &kp LS(LG(I))
&kp LG(F)                 &kp LG(S)             &kp Z               &kp LC(DOWN_ARROW)  &kp X          &kp LG(LC(LA(N)))        &kp LG(A)         &kp LG(C)        &kp LG(V)    &kp LG(Z)          &kp LS(LG(Z))  &kp ESC
                                                                    &trans              &trans         &kp SPACE                &kp ENTER         &trans           &trans
            >;
        };

        vscode {
            bindings = <
&kp MINUS                 &kp EQUAL             &kp A               &kp LC(UP_ARROW)    &kp S          &kp LG(LS(NUMBER_4))     &kp LS(LA(LEFT))  &kp LA(DOWN)     &kp LA(UP)   &kp LS(LA(RIGHT))  &kp LG(X)      &kp BACKSPACE
&kp LC(LA(LEFT_COMMAND))  &kp LC(LEFT_COMMAND)  &kp LC(LEFT_ARROW)  &kp C               &kp LC(RIGHT)  &kp LG(LC(LA(SPACE)))    &kp LS(LG(P))     &kp LS(LG(RET))  &kp LA(RET)  &kp LG(FSLH)       &kp LG(DOT)    &kp LS(LG(I))
&kp LG(F)                 &kp LG(S)             &kp Z               &kp LC(DOWN_ARROW)  &kp X          &kp LG(LC(LA(N)))        &kp LG(A)         &kp LG(C)        &kp LG(V)    &kp LG(Z)          &kp LS(LG(Z))  &kp ESC
                                                                    &trans              &trans         &kp SPACE                &kp ENTER         &trans           &trans
            >;
        };

        bluethooth {
            bindings = <
&none  &none         &none         &none         &none         &none           &none       &none           &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none           &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &bt BT_CLR  &bt BT_CLR_ALL  &none  &none  &none  &to 0
                                   &none         &none         &none           &none       &none           &none
            >;
        };

        template {
            bindings = <
&kp ESC  &none    &none                   &none              &none                     &none                   &none                  &none                      &none                      &none                    &none  &kp BSPC
&none    &lt 2 A  &HOME_ROW LEFT_SHIFT S  &HOME_ROW LCTRL D  &HOME_ROW LEFT_COMMAND F  &HOME_ROW LEFT_ALT G    &HOME_ROW RIGHT_ALT H  &HOME_ROW RIGHT_COMMAND J  &HOME_ROW RIGHT_CONTROL K  &HOME_ROW RIGHT_SHIFT L  &mo 2  &none
&kp TAB  &none    &none                   &none              &none                     &none                   &none                  &none                      &none                      &none                    &none  &kp ESCAPE
                                          &trans             &trans                    &kp SPACE               &kp RET                &trans                     &trans
            >;
        };
    };
};

// -----------------------------------------------------------------------------------------
// &nice_view_spi {
//   cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
// };
