/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        BT_SETTINGS: BT_SETTINGS {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_SETTINGS";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&to 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I     &kp O  &kp P  &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K     &kp L  &none  &none
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &none     &none  &none  &kp ESCAPE
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        control {
            bindings = <
&kp MINUS             &kp EQUAL      &kp A               &kp LC(UP_ARROW)    &kp S          &kp LG(LS(NUMBER_4))    &kp SEMICOLON   &kp TILDE  &kp GRAVE     &kp TILDE  &kp QUESTION  &none
&kp LG(LC(LEFT_ALT))  &kp LG(LCTRL)  &kp LC(LEFT_ARROW)  &kp C               &kp LC(RIGHT)  &none                   &kp LEFT        &kp DOWN   &kp UP        &kp RIGHT  &none         &none
&kp SPACE             &kp ENTER      &kp Z               &kp LC(DOWN_ARROW)  &kp X          &kp N                   &none           &none      &none         &none      &none         &BT_SETTINGS
                                                         &kp LEFT_GUI        &trans         &kp LEFT_CONTROL        &kp LEFT_SHIFT  &trans     &kp LEFT_ALT
            >;
        };

        symbols {
            bindings = <
&kp EXCL        &kp N1    &kp N2                &kp N3             &kp N4     &kp N5              &kp N6            &kp N7          &kp N8        &kp N9                 &kp N0    &kp AT_SIGN
&kp LEFT_BRACE  &kp LBKT  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp DOT    &kp COMMA           &kp COLON         &kp UNDERSCORE  &kp EQUAL     &kp RIGHT_PARENTHESIS  &kp RBKT  &kp RIGHT_BRACE
&kp AMPERSAND   &kp BSLH  &kp PIPE              &kp SQT            &kp POUND  &kp LESS_THAN       &kp GREATER_THAN  &kp MINUS       &kp PLUS      &kp ASTERISK           &kp FSLH  &kp PERCENT
                                                &kp LEFT_COMMAND   &trans     &kp LEFT_CONTROL    &kp LEFT_SHIFT    &trans          &kp LEFT_ALT
            >;
        };

        bluethooth {
            bindings = <
&none  &none         &none         &none         &none         &none           &none       &none           &none  &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none           &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &bt BT_CLR  &bt BT_CLR_ALL  &none  &none  &none  &to 0
                                   &none         &none         &none           &none       &none           &none
            >;
        };
    };
};

// -----------------------------------------------------------------------------------------
// &nice_view_spi {
//   cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
// };
